from typing import Any, Optional

class Sifting:
    def sifter_arguments(self, parser: Any): ...
    def default_params(self): ...
    def get_params(self, options: Any): ...
    def get_outputs(self, options: Any): ...
    def get_sieves(self, entry_points: bool = ...): ...
    def get_sifter(self, options: Any): ...

class BuildSifting(Sifting):
    def get_sieves(self, entry_points: bool = ...): ...

class TagSifting(Sifting):
    def get_sieves(self, entry_points: bool = ...): ...

def output_sifted(results: Any, key: str = ..., outputs: Optional[Any] = ..., sort: Optional[Any] = ...) -> None: ...
