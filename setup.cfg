# This file defines the general configuration for the kojismokydingo
# wheel, and the tools tox, nose, flake8, coverage, and sphinx


[metadata]
name = kojismokydingo
description =  A collection of Koji client plugins and utils

author = Christopher O'Brien
author_email = obriencj@gmail.com

license = GNU General Public License v3 (GPLv3)
license_file = LICENSE

long_description = file: README.md
long_description_content_type = text/markdown

home_page = https://github.com/obriencj/koji-smoky-dingo

platform = any

project_urls =
  Source = https://github.com/obriencj/koji-smoky-dingo
  Bug Reports = https://github.com/obriencj/koji-smoky-dingo/issues
  Documentation = https://obriencj.github.io/koji-smoky-dingo

classifiers =
  Environment :: Console
  Intended Audience :: Developers
  License :: OSI Approved :: GNU General Public License v3 (GPLv3)
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.6
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Topic :: Software Development :: Build Tools


[aliases]
# nose acts enough like the original test command, but without the
# extremely obnoxious deprecation warning. And why are they
# deprecating the test command? So someone can remove approximately 40
# lines of code from setuptools, despite the test command being the
# most convenient and available way to get started with unit testing.

docs = build_sphinx
test = nosetests
types = mypy


[build_sphinx]
# some of the configuration for sphinx. The rest of it lives over in
# docs/conf.py

version = 2.0
release = 2.0.0

project = kojismokydingo
copyright = 2020-2021, Christopher O'Brien

build-dir = build/sphinx
builder = dirhtml html
source-dir = docs


[tox:tox]
envlist = flake8,mypy,py{36,37,38,39},coverage
skip_missing_interpreters = true


[testenv]
setenv =
  KSD_MERGE_PYI = 0
  COVERAGE_FILE = .coverage.{envname}

commands =
  coverage run -m nose

sitepackages = false

deps =
  coverage
  docutils
  mock
  nose

download = true


[testenv:py39]
# argparse for this version has different help output which screws
# with the docs tests

setenv =
  KSD_MERGE_PYI = 1
  COVERAGE_FILE = .coverage.{envname}

commands =
  coverage run -m nose -e 'test_command_help' -e 'test_standalone_help'


[testenv:flake8]

basepython = python

commands =
  python -B -m flake8 kojismokydingo/ koji_cli_plugins/

deps =
  flake8
  koji


[testenv:mypy]

basepython = python

commands =
  python -B -m mypy kojismokydingo

deps =
  mypy
  types-pkg_resources
  typing_extensions


[testenv:coverage]
# this is just here to combine the coverage output

setenv =
  COVERAGE_FILE = .coverage

basepython = python

commands =
  coverage combine
  coverage report
  coverage html


[nosetests]

all-modules = 1
no-byte-compile = 1
verbosity = 2


[coverage:run]

include =
  koji_cli_plugins/*
  kojismokydingo/*

omit =
  *.pyi


[coverage:report]

exclude_lines =
  \.\.\.
  pass
  pragma: no cover
  @abstract


[flake8]
# E303 complains about more than one blank lines between methods in a class
# E731 assigning a lambda to a variable
# E741 ambiguous variable name
# F401 ambiguous variable name
# F812 list comprehension redefines variable (I reuse tmp names)
# W504 line break after binary operator

ignore = E303,E731,E741,F401,F812,W504

filename =
  *.py
  *.pyi

exclude =
  __pycache__
  .*
  build
  dist
  docs
  gh-pages
  htmlcov
  setup.py
  tests
  todo
  tools


[mypy]
no_site_packages = False
ignore_missing_imports = True
strict_optional = False
mypy_path = tools/stubs/


#
# The end.
